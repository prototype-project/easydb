type Field {
    name: String!
    value: String!
}

type GraphQlElement {
    id: String!
    fields: [Field]
}

enum GraphQlElementEventType {
    CREATE,
    UPDATE,
    DELETE
}

type GraphQlElementEvent {
    type: GraphQlElementEventType!
    element: GraphQlElement!
}

input ElementFilter {
    fieldsFilters: [FieldFilter]
    or: [ElementFilter]
    and: [ElementFilter]
}

input FieldFilter {
    name: String!
    value: String!
}

type Query {}

type Subscription {
    elementsEvents(filter: ElementFilter): GraphQlElementEvent!
}

schema {
    query: Query
    subscription: Subscription
}