version: '3.3'

services:
  # shards
  mongo-replicaset-node1:
    container_name: mongo-replicaset-node1
    build:
      context: ""
      dockerfile: Mongo
      labels:
        - "type=Mongo Cluster"
    image: easydb/mongo

    command: mongod --shardsvr --replSet mongo-replicaset --dbpath /data/db --port 27017 --bind_ip 0.0.0.0
    ports:
      - 27017:27017
    expose:
      - "27017"
    volumes:
      - /tmp/data/easydb/mongodb/data1:/data/db
    networks:
      - easydb

  mongo-replicaset-node2:
    container_name: mongo-replicaset-node2
    build:
      context: ""
      dockerfile: Mongo
      labels:
        - "type=Mongo Cluster"
    image: easydb/mongo

    command: mongod --shardsvr --replSet mongo-replicaset --dbpath /data/db --port 27017 --bind_ip 0.0.0.0
    ports:
      - 27027:27017
    expose:
      - "27017"
    volumes:
      - /tmp/data/easydb/mongodb/data2:/data/db
    networks:
      - easydb

  mongo-replicaset-node3:
    container_name: mongo-replicaset-node3
    build:
      context: ""
      dockerfile: Mongo
      labels:
        - "type=Mongo Cluster"
    image: easydb/mongo

    command: mongod --shardsvr --replSet mongo-replicaset --dbpath /data/db --port 27017 --bind_ip 0.0.0.0
    ports:
      - 27037:27017
    expose:
      - "27017"
    volumes:
      - /tmp/data/easydb/mongodb/data3:/data/db
    networks:
      - easydb

  # config servers
  mongo-configserver-node1:
    container_name: mongo-configserver-node1
    build:
      context: ""
      dockerfile: Mongo
      labels:
        - "type=Mongo Cluster"
    image: easydb/mongo
    command: mongod --configsvr --replSet mongo-config-server --dbpath /data/db --port 27017 --bind_ip 0.0.0.0
    expose:
      - "27017"
    volumes:
      - /tmp/data/easydb/mongodb/config1:/data/db
    networks:
      - easydb

  mongo-configserver-node2:
    container_name: mongo-configserver-node2
    build:
      context: ""
      dockerfile: Mongo
      labels:
        - "type=Mongo Cluster"
    image: easydb/mongo
    command: mongod --configsvr --replSet mongo-config-server --dbpath /data/db --port 27017 --bind_ip 0.0.0.0
    expose:
      - "27017"
    volumes:
      - /tmp/data/easydb/mongodb/config2:/data/db
    networks:
      - easydb

  mongo-configserver-node3:
    container_name: mongo-configserver-node3
    build:
      context: ""
      dockerfile: Mongo
      labels:
        - "type=Mongo Cluster"
    image: easydb/mongo
    command: mongod --configsvr --replSet mongo-config-server --dbpath /data/db --port 27017 --bind_ip 0.0.0.0
    expose:
      - "27017"
    volumes:
      - /tmp/data/easydb/mongodb/config3:/data/db
    networks:
      - easydb

  # routers
  mongo-router1:
    container_name: mongo-router1
    build:
      context: ""
      dockerfile: Mongo
      labels:
        - "type=Mongo Cluster"
    image: easydb/mongo
    depends_on:
      - mongo-configserver-node1
      - mongo-configserver-node2
    command: mongos --configdb mongo-config-server/mongo-configserver-node1:27017,mongo-configserver-node2:27017,mongo-configserver-node3:27017 --port 27017 --bind_ip 0.0.0.0
    ports:
      - 27019:27017
    expose:
      - "27017"
    networks:
      - easydb

  mongo-router2:
    container_name: mongo-router2
    build:
      context: ""
      dockerfile: Mongo
      labels:
        - "type=Mongo Cluster"
    image: easydb/mongo
    depends_on:
      - mongo-configserver-node1
      - mongo-configserver-node2
    command: mongos --configdb mongo-config-server/mongo-configserver-node1:27017,mongo-configserver-node2:27017,mongo-configserver-node3:27017 --port 27017 --bind_ip 0.0.0.0
    ports:
      - 27020:27017
    expose:
      - "27017"
    networks:
      - easydb

networks:
  easydb: